version: "3.7"
services:

  db-mysql:
    platform: linux/amd64
    image: mysql
    container_name: ${COMPOSE_PROJECT_NAME}-db-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/configs/mysql/init/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./docker/configs/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - fsm-backend

  backend:
    depends_on:
      - db-mysql
    environment:
      - PHP_IDE_CONFIG=serverName=dofroscra
    build:
      args:
        user: www
        uid: 1000
      context: ./
      dockerfile: docker/dockerfiles/php.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-backend
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    ports:
      - 9003:9000
    restart: unless-stopped
    volumes:
      - .git:/var/www/src/.git
      - ./src:/var/www/src
      - ./src/vendor:/var/www/src/vendor
    networks:
      - fsm-backend

  nginx:
    platform: linux/amd64
    depends_on:
      - backend
    image: nginx:stable
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./docker/configs/nginx/conf.d/:/etc/nginx/conf.d/
      - ./src:/var/www/src
    networks:
      - fsm-backend

#  sonarqube:
#    image: sonarqube:9.5-community
#    container_name: ${COMPOSE_PROJECT_NAME}-sonarqube
#    depends_on:
#      - db-mysql
#    ports:
#      - "9090:9000"
#    networks:
#      - fsm-backend
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
#      SONAR_JDBC_USERNAME: sonarqube
#      SONAR_JDBC_PASSWORD: sonarqube
#    volumes:
#      - ./docker/configs/sonarqube/data:/opt/sonarqube/data
#      - ./docker/configs/sonarqube/extensions:/opt/sonarqube/extensions
#      - ./docker/configs/sonarqube/logs:/opt/sonarqube/logs
#      - ./docker/configs/sonarqube/temp:/opt/sonarqube/temp
#
#  db:
#    image: postgres
#    networks:
#      - fsm-backend
#    environment:
#      POSTGRES_USER: sonarqube
#      POSTGRES_PASSWORD: sonarqube
#    volumes:
##      - postgresql:/var/lib/postgresql
#      # This needs explicit mapping due to
#      # https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
#      - ./docker/configs/postgresql/data:/var/lib/postgresql/data

networks:
  fsm-backend:
    driver: bridge
