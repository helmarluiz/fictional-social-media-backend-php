name: Build
on:
  push:
    branches:
      - main
#  pull_request:
#    types: [opened, synchronize, reopened]
jobs:
  tests:
    name: Tests PHPUnit
    runs-on: ubuntu-latest
    environment: master
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

#      - name: change code xdebug mode to coverage
#        run: sed -i 's/;xdebug.mode=debug/xdebug.mode=coverage/g' docker/configs/php/xdebug.ini

#      - name: Copy Docker env file
#        run: cp .env.example .env
#
#      - name: Copy Application env file
#        run: cp src/.env.example src/.env
#
#      - name: Start containers
#        run:  docker-compose build && docker-compose up -d
#
#      - name: Tests
#        run: docker-compose run -w /var/www/src -v ${pwd}:/var/www/src -T backend bash -c "ls -la  && vendor/bin/phpunit"
#        with:
#          name: test-reports
#          path: src/test-reports

      - name: Install composer and dependencies
        uses: php-actions/composer@v6
        with:
          php_version: 8.1
          version: latest
          args: --working-dir=src

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: coverage
        with:
          php_version: 8.1
          version: latest
          bootstrap: src/vendor/autoload.php
          php_extensions: xdebug
          configuration: src/phpunit.xml
          args: --coverage-clover=src/test-reports/phpunit.coverage.xml --log-junit=src/test-reports/phpunit.junit.xml

      - name: Show reports
        run: ls -la src/test-reports && ls -la src

#     run: sed -i 's/;xdebug.mode=debug/xdebug.mode=coverage/g' docker/configs/php/xdebug.ini
      - name: Create Artifacts
        uses: actions/upload-artifact@master
        with:
          name: test-reports
          path: src/test-reports

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    environment: master
    needs: tests
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Create Artifacts
        uses: actions/download-artifact@master
        with:
          name: test-reports
          path: src/test-reports

      - name: Show reports
        run: ls -la src/test-reports && ls -la src  && chmod -R 777 src/test-reports && ls -la src/test-reports

      - name: fix code coverage paths
        working-directory: ./src/test-reports
        run: |
          echo ${{ github.event.repository.name }}
          sed -i 's/\/app\/src\//\/github\/workspace\/src\//g' phpunit.coverage.xml
          sed -i 's/\/app\/src\//\/github\/workspace\/src\//g' phpunit.junit.xml
          ls -la
          cat phpunit.coverage.xml | grep .php
          cat phpunit.junit.xml | grep .php

      - name: SonarCloud Scan
        run: >
          docker run --volume="$(pwd)/src:/usr/src" --network="host" newtmitch/sonar-scanner sonar-scanner
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.projectKey=fsm
          -Dsonar.organization=helmar-luiz
          -Dsonar.php.coverage.reportPaths=test-reports/phpunit.coverage.xml
          -Dsonar.php.tests.reportPath=test-reports/phpunit.junit.xml
          -Dsonar.language=php
          -Dsonar.sources=.
          -Dsonar.login=580ceecf977616f6c8b2064bfa4e4926d3e7065d
          -Dsonar.verbose=true
          -Dsonar.scm.disabled=true
          -Dsonar.exclusions='vendor/**'
          -Dsonar.inclusions='**/*.php'