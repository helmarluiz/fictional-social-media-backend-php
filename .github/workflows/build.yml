name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-tests:
    name: Tests PHPUnit
    runs-on: ubuntu-latest
    environment: master
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2


      - name: Copy Env Files
        run: |
          cp .env.example .env
          cp src/.env.example src/.env 

      - uses: actions/checkout@v2

        # Pull the latest image to build, and avoid caching pull-only images.
        # (docker pull is faster than caching in most cases.)
      - run: docker-compose pull

        # In this step, this action saves a list of existing images,
        # the cache is created without them in the post run.
        # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
          # Ignore the failure of a step and avoid terminating the job.
          continue-on-error: true
      - run: docker-compose up --build

      - name: Start all containers
        run: docker-compose up -d

      - name: Detect coding standard violations
        run: |
          docker exec fsm-backend bash -c "vendor/bin/phpcs \
          -q --extensions=php --standard=PSR12 --report=checkstyle app tests | vendor/bin/cs2pr --graceful-warnings"

      - name: Detect coding standard violations
        run: |
          docker exec fsm-backend bash -c "XDEBUG_MODE=coverage vendor/bin/phpunit \
          --coverage-clover=tests/reports/phpunit.coverage.xml --log-junit=tests/reports/phpunit.junit.xml"

      - name: Create test-reports artifacts
        uses: actions/upload-artifact@master
        with:
          name: test-reports
          path: src/tests/reports

  sonarcloud:
    name: SonarCloud Scanner
    runs-on: ubuntu-latest
    environment: master
    needs: build-and-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download test-reports artifacts
        uses: actions/download-artifact@master
        with:
          name: test-reports
          path: src/tests/reports

      - name: Fix PHPUnit code coverage paths
        working-directory: ./src/tests/reports
        run: |
          echo ${{ github.event.repository.name }}
          sed -i 's/\/app\/src\//\/usr\/src\//g' phpunit.coverage.xml
          sed -i 's/\/app\/src\//\/usr\/src\//g' phpunit.junit.xml

      - name: SonarCloud Scan
        run: >
          docker run --volume="$(pwd)/src:/usr/src" --network="host" newtmitch/sonar-scanner sonar-scanner
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.projectKey=helmarluiz_fictional-social-media-backend-php
          -Dsonar.projectName=FSM
          -Dsonar.organization=helmarluiz
          -Dsonar.php.coverage.reportPaths=tests/reports/phpunit.coverage.xml
          -Dsonar.php.tests.reportPath=tests/reports/phpunit.junit.xml
          -Dsonar.language=php
          -Dsonar.sources=.
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.verbose=true
          -Dsonar.scm.disabled=true
          -Dsonar.exclusions='vendor/**'
          -Dsonar.inclusions='**/*.php'